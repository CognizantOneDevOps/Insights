[
	{
		"kpiId": 1,
		"name": "Average Build Time",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA)  WHERE n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and  n.result='SUCCESS' RETURN COALESCE(Avg(toInteger(n.duration)),0) as avgOutput",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "avgOutput",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 2,
		"name": "Total Number of Builds",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} RETURN count(distinct n.buildNumber) as TotalNumberBuild",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "TotalNumberBuild",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 3,
		"name": "Number of Successful Builds",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and n.result='SUCCESS' RETURN  count(distinct n.buildNumber) as TotalNumberBuild",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "TotalNumberBuild",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 4,
		"name": "Number of Failed Builds",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and n.result='FAILURE' RETURN count(distinct n.buildNumber) as TotalNumberBuild",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "TotalNumberBuild",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 5,
		"name": "Maximum Succesful Build Time",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime}  and n.result='SUCCESS' RETURN COALESCE(Max(toInteger(n.duration)),0) as MaxBuildTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MaxBuildTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
    
    {
		"kpiId": 6,
		"name": "Jenkins Build Failures V/S Success",
		"group": "BUILD",
		"category": "THRESHOLD_RANGE",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS) WHERE  n.inSightsTime>= {startTime}  and n.inSightsTime<= {endTime}  with distinct n.buildNumber as buildNumber, n.result as result with  buildNumber ,result ,case when result='FAILURE' then count(result) end as Failure ,case when result='SUCCESS' then count(result) end as Success RETURN  count(Failure) as Failure , count (Success) as Success",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "Failure",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 7,
		"name": "Minimum Build Time",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE  n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and  n.result='SUCCESS' RETURN  COALESCE(Min(toInteger(n.duration)),0) as MinBuildTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MinBuildTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 8,
		"name": "Average Duration of Succesful Deployments",
		"group": "DEPLOYMENT",
		"toolName": "RUNDECK",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and  n.status='succeeded' RETURN (avg((n.unixTimestampEnd-n.unixTimestampStart))/1000) as averageDeploymentDuration",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "averageDeploymentDuration",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 9,
		"name": "Total Failed Deployments",
		"group": "DEPLOYMENT",
		"toolName": "RUNDECK",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE  n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} AND n.status='failed' RETURN count(n.status) as totalDeploymentCount",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "totalDeploymentCount",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 10,
		"name": "Maximum Deployment Time",
		"group": "DEPLOYMENT",
		"category": "COMPARISON",
		"toolName": "RUNDECK",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and  n.status='succeeded' RETURN (max((n.unixTimestampEnd-n.unixTimestampStart))/1000) as MaxDeploymentTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MaxDeploymentTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 11,
		"name": "Total Successful Deployments",
		"group": "DEPLOYMENT",
		"toolName": "RUNDECK",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE n.inSightsTime >= {startTime} and n.inSightsTime<= {endTime} and  n.status='succeeded' RETURN count(n.status) as totalDeploymentCount",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "totalDeploymentCount",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 12,
		"name": "Minimum Deployment Time",
		"group": "DEPLOYMENT",
		"category": "COMPARISON",
		"toolName": "RUNDECK",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE  n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and n.status='succeeded' RETURN min((n.unixTimestampEnd-n.unixTimestampStart))/1000 as MinDeploymentTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MinDeploymentTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},


	{
		"kpiId": 13,
		"name": "Number of Successful Sonar Executions",
		"group": "CODEQUALITY",
		"toolName": "SONAR",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime} and n.alert_status='OK' RETURN count(n) as NumberOfQualityBlocks",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "NumberOfQualityBlocks",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 14,
		"name": "Total Code Issues in Successful Analysis",
		"group": "CODEQUALITY",
		"toolName": "SONAR",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:SONAR:DATA) WHERE  n.inSightsTime>= {startTime} and n.inSightsTime<= {endTime}  with n where n.alert_status='OK'  RETURN SUM(toInteger(n.bugs)) as Bugs , SUM(toInteger(n.code_smells)) as CodeSmell, SUM(toInteger(n.vulnerabilities)) as Vulnerablilities",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "CodeSmell",
		"usecase":"",
		"outputDatasource":"NEO4J"
	}
]