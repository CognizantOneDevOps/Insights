[
	{
		"kpiId": 111,
		"name": "Average Build Time",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA)  WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKvector = 'BUILD' and n.SPKstatus='Success' RETURN COALESCE(Avg(toInteger(n.SPKduration)),0) as avgOutput",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "avgOutput",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 231,
		"name": "Total Number of Builds",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA)WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} RETURN count(n) as TotalNumberBuild",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "TotalNumberBuild",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 122,
		"name": "Number of Successful Builds",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKstatus='Success' RETURN  count(n) as TotalNumberBuild",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "TotalNumberBuild",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 124,
		"name": "Number of Failed Builds",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKstatus='Failure' RETURN count(n) as TotalNumberBuild",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "TotalNumberBuild",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 126,
		"name": "Maximum Build Time",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKvector = 'BUILD' and n.SPKstatus='Success' RETURN COALESCE(Max(toInteger(n.SPKduration)),0) as MaxBuildTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MaxBuildTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 128,
		"name": "Minimum Build Time",
		"group": "BUILD",
		"category": "COMPARISON",
		"toolName": "JENKINS",
		"DBQuery": "MATCH (n:JENKINS:DATA) WHERE  n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKvector = 'BUILD' and n.SPKstatus='Success' RETURN  COALESCE(Min(toInteger(n.SPKduration)),0) as MinBuildTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MinBuildTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 233,
		"name": "Average Duration of Succesful Deployments",
		"group": "DEPLOYMENT",
		"toolName": "RUNDECK",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKvector = 'DEPLOYMENT' and n.SPKstatus='Success' RETURN COALESCE(round(Avg(toInteger(n.SPKduration))),0) as averageDeploymentDuration",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "averageDeploymentDuration",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 140,
		"name": "Total Failed Deployments",
		"group": "DEPLOYMENT",
		"toolName": "RUNDECK",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE  n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKvector = 'DEPLOYMENT' AND n.SPKstatus='Failure' RETURN count(n.SPKstatus) as totalDeploymentCount",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "totalDeploymentCount",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 243,
		"name": "Maximum Deployment Time",
		"group": "DEPLOYMENT",
		"category": "COMPARISON",
		"toolName": "RUNDECK",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and  n.SPKvector = 'DEPLOYMENT' and n.SPKstatus='Success' RETURN COALESCE(Max(toInteger(n.SPKduration)),0) as MaxDeploymentTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MaxDeploymentTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 142,
		"name": "Total Successful Deployments",
		"group": "DEPLOYMENT",
		"toolName": "RUNDECK",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and  n.SPKvector = 'DEPLOYMENT' and n.SPKstatus='Success' RETURN count(n.SPKstatus) as totalDeploymentCount",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "totalDeploymentCount",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 144,
		"name": "Minimum Deployment Time",
		"group": "DEPLOYMENT",
		"category": "COMPARISON",
		"toolName": "RUNDECK",
		"DBQuery": "MATCH (n:RUNDECK:DATA) WHERE  n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKvector = 'DEPLOYMENT' and n.SPKstatus='Success' RETURN COALESCE(Min(toInteger(n.SPKduration)),0) as MinDeploymentTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "MinDeploymentTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 331,
		"name": "Average Complexity",
		"group": "CODEQUALITY",
		"category": "COMPARISON",
		"toolName": "SONAR",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKstatus='Success' RETURN  COALESCE(round(Avg(toInteger(n.SPKcomplexity))),0) as AvgComplexityCoverage",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "AvgComplexityCoverage",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 131,
		"name": "Average Duplicated Blocks",
		"group": "CODEQUALITY",
		"category": "COMPARISON",
		"toolName": "SONAR",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKstatus='Success' RETURN  COALESCE(Avg(toInteger(n.SPKduplication)),0) as AvgDuplicateBlocksCoverage",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "AvgDuplicateBlocksCoverage",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 101,
		"name": "Number of Quality Passed Blocks",
		"group": "CODEQUALITY",
		"toolName": "SONAR",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKqualityGate='pass' RETURN count(n) as NumberOfQualityBlocks",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "NumberOfQualityBlocks",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 133,
		"name": "Number of Quality Failed Blocks",
		"group": "CODEQUALITY",
		"toolName": "SONAR",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKqualityGate='fail' RETURN count(n) as NumberOfQualityBlocks",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "NumberOfQualityBlocks",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 236,
		"name": "Average Code Coverage",
		"group": "CODEQUALITY",
		"toolName": "SONAR",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKstatus='Success' RETURN  COALESCE(Avg(toInteger(n.SPKcoverage)),0) as AvgCodeCoverage",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "AvgCodeCoverage","usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 135,
		"name": "Number of Successful Sonar Executions",
		"group": "CODEQUALITY",
		"toolName": "SONAR",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKstatus='Success' RETURN count(n) as NumberOfSonarExecutions",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "NumberOfSonarExecutions",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 137,
		"name": "Number of Failed Sonar Executions",
		"group": "CODEQUALITY",
		"toolName": "SONAR",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:SONAR:DATA) where n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKstatus='Failure' RETURN count(n) as NumberOfSonarExecutions",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "NumberOfSonarExecutions",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 149,
		"name": "Number of Defects",
		"category": "COMPARISON",
		"group": "DEFECTS",
		"toolName": "JIRA",
		"DBQuery": "MATCH (n:JIRA:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKissueType='Bug' RETURN count(n) as totalDefect",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "totalDefect",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 161,
		"expectedTrend": "UPWARDS",
		"name": "Number of Closed Defects",
		"group": "DEFECTS",
		"toolName": "JIRA",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:JIRA:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKissueType='Bug' and n.SPKstatus='Closed'  RETURN count(n) as ClosedDefect",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "ClosedDefect",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 151,
		"name": "Number of Open Defects",
		"category": "COMPARISON",
		"group": "DEFECTS",
		"toolName": "JIRA",
		"DBQuery": "MATCH (n:JIRA:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKissueType='Bug' and n.SPKstatus='Open'  RETURN count(n) as OpenDefect",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "OpenDefect",
		"usecase":"",
		"outputDatasource":"NEO4J"
	},
	{
		"kpiId": 153,
		"name": "Average Defect Duration",
		"group": "DEFECTS",
		"toolName": "JIRA",
		"category": "COMPARISON",
		"DBQuery": "MATCH (n:JIRA:DATA) WHERE n.SPKstartTime >= {startTime} and n.SPKstartTime <= {endTime} and n.SPKissueType='Bug' and n.SPKstatus='Closed'  RETURN COALESCE(Avg(toInteger(n.SPKduration)),0) as AvgDefectCompletionTime",
		"datasource": "NEO4J",
		"isActive": true,
		"resultField": "AvgDefectCompletionTime",
		"usecase":"",
		"outputDatasource":"NEO4J"
	}
]